using System;
using HarmonyLib;
using System.Linq;
using System.Reflection;
using System.Reflection.Emit;

namespace HarmonyLib
{
    public static class HarmonyEx
    {
        static HarmonyEx()
        {
            asmBuilder = AssemblyBuilder.DefineDynamicAssembly(new AssemblyName("DelegateToDynamicMethod"), AssemblyBuilderAccess.Run);
            moduleBuilder = asmBuilder.DefineDynamicModule("DelegateToDynamicMethod");
        }
        static readonly AssemblyBuilder asmBuilder;
        static readonly ModuleBuilder moduleBuilder;
        static int TypeCount = 0;
        public static MethodInfo Wrap<T>(T del) where T : Delegate
        {
            Type delType = del.GetType();
            MethodInfo method = delType.GetMethod("Invoke");
            MethodInfo emitMethod = del.Method;
            TypeBuilder typeBuilder = moduleBuilder.DefineType($"Type{TypeCount++}", TypeAttributes.Public | TypeAttributes.Class);
            string methodName = $"{delType.Name}_Copy{emitMethod.GetHashCode()}";
            ParameterInfo[] parameters = emitMethod.GetParameters();
            Type[] parameterTypes = parameters.Select(x => x.ParameterType).ToArray();
            MethodBuilder methodBuilder = typeBuilder.DefineMethod(methodName, MethodAttributes.Public | MethodAttributes.Static, CallingConventions.Standard, emitMethod.ReturnType, parameterTypes);
            for (int i = 0; i < parameters.Length; i++)
                methodBuilder.DefineParameter(i + 1, parameters[i].Attributes, parameters[i].Name);
            FieldBuilder fieldBuilder = typeBuilder.DefineField("patch", delType, FieldAttributes.Public | FieldAttributes.Static);
            ILGenerator il = methodBuilder.GetILGenerator();
            il.Emit(OpCodes.Ldsfld, fieldBuilder);
            for (int i = 0; i < parameters.Length; i++)
            {
                if (i == 0)
                    il.Emit(OpCodes.Ldarg_0);
                else if (i == 1)
                    il.Emit(OpCodes.Ldarg_1);
                else if (i == 2)
                    il.Emit(OpCodes.Ldarg_2);
                else if (i == 3)
                    il.Emit(OpCodes.Ldarg_3);
                else
                    il.Emit(OpCodes.Ldarg, i);
            }
            il.Emit(OpCodes.Callvirt, method);
            il.Emit(OpCodes.Ret);
            Type type = typeBuilder.CreateType();
            MethodInfo defined = type.GetMethod(methodName, (BindingFlags)15420);
            type.GetField("patch").SetValue(null, del);
            return defined;
        }
        #region Prefix
        public static MethodInfo Prefix(this Harmony harmony, MethodBase target, Delegate patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix(this Harmony harmony, MethodBase target, Action patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T>(this Harmony harmony, MethodBase target, Action<T> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2>(this Harmony harmony, MethodBase target, Action<T, T2> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3>(this Harmony harmony, MethodBase target, Action<T, T2, T3> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4>(this Harmony harmony, MethodBase target, Action<T, T2, T3, T4> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5>(this Harmony harmony, MethodBase target, Action<T, T2, T3, T4, T5> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6>(this Harmony harmony, MethodBase target, Action<T, T2, T3, T4, T5, T6> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7>(this Harmony harmony, MethodBase target, Action<T, T2, T3, T4, T5, T6, T7> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8>(this Harmony harmony, MethodBase target, Action<T, T2, T3, T4, T5, T6, T7, T8> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9>(this Harmony harmony, MethodBase target, Action<T, T2, T3, T4, T5, T6, T7, T8, T9> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10>(this Harmony harmony, MethodBase target, Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(this Harmony harmony, MethodBase target, Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(this Harmony harmony, MethodBase target, Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(this Harmony harmony, MethodBase target, Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(this Harmony harmony, MethodBase target, Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(this Harmony harmony, MethodBase target, Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(this Harmony harmony, MethodBase target, Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(this Harmony harmony, MethodBase target, Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(this Harmony harmony, MethodBase target, Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(this Harmony harmony, MethodBase target, Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(this Harmony harmony, MethodBase target, Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(this Harmony harmony, MethodBase target, Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(this Harmony harmony, MethodBase target, Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(this Harmony harmony, MethodBase target, Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(this Harmony harmony, MethodBase target, Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(this Harmony harmony, MethodBase target, Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(this Harmony harmony, MethodBase target, Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix(this Harmony harmony, MethodBase target, Func<bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T>(this Harmony harmony, MethodBase target, Func<T, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2>(this Harmony harmony, MethodBase target, Func<T, T2, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3>(this Harmony harmony, MethodBase target, Func<T, T2, T3, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4>(this Harmony harmony, MethodBase target, Func<T, T2, T3, T4, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5>(this Harmony harmony, MethodBase target, Func<T, T2, T3, T4, T5, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6>(this Harmony harmony, MethodBase target, Func<T, T2, T3, T4, T5, T6, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7>(this Harmony harmony, MethodBase target, Func<T, T2, T3, T4, T5, T6, T7, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8>(this Harmony harmony, MethodBase target, Func<T, T2, T3, T4, T5, T6, T7, T8, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9>(this Harmony harmony, MethodBase target, Func<T, T2, T3, T4, T5, T6, T7, T8, T9, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10>(this Harmony harmony, MethodBase target, Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(this Harmony harmony, MethodBase target, Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(this Harmony harmony, MethodBase target, Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(this Harmony harmony, MethodBase target, Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(this Harmony harmony, MethodBase target, Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(this Harmony harmony, MethodBase target, Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(this Harmony harmony, MethodBase target, Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(this Harmony harmony, MethodBase target, Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(this Harmony harmony, MethodBase target, Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(this Harmony harmony, MethodBase target, Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(this Harmony harmony, MethodBase target, Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(this Harmony harmony, MethodBase target, Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(this Harmony harmony, MethodBase target, Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(this Harmony harmony, MethodBase target, Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(this Harmony harmony, MethodBase target, Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(this Harmony harmony, MethodBase target, Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(this Harmony harmony, MethodBase target, Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T>(this Harmony harmony, MethodBase target, RefAction<T> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2>(this Harmony harmony, MethodBase target, RefAction<T, T2> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2>(this Harmony harmony, MethodBase target, Ref2Action<T, T2> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3>(this Harmony harmony, MethodBase target, RefAction<T, T2, T3> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3>(this Harmony harmony, MethodBase target, Ref2Action<T, T2, T3> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3>(this Harmony harmony, MethodBase target, Ref3Action<T, T2, T3> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4>(this Harmony harmony, MethodBase target, RefAction<T, T2, T3, T4> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4>(this Harmony harmony, MethodBase target, Ref2Action<T, T2, T3, T4> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4>(this Harmony harmony, MethodBase target, Ref3Action<T, T2, T3, T4> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4>(this Harmony harmony, MethodBase target, Ref4Action<T, T2, T3, T4> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5>(this Harmony harmony, MethodBase target, RefAction<T, T2, T3, T4, T5> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5>(this Harmony harmony, MethodBase target, Ref2Action<T, T2, T3, T4, T5> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5>(this Harmony harmony, MethodBase target, Ref3Action<T, T2, T3, T4, T5> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5>(this Harmony harmony, MethodBase target, Ref4Action<T, T2, T3, T4, T5> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5>(this Harmony harmony, MethodBase target, Ref5Action<T, T2, T3, T4, T5> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6>(this Harmony harmony, MethodBase target, RefAction<T, T2, T3, T4, T5, T6> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6>(this Harmony harmony, MethodBase target, Ref2Action<T, T2, T3, T4, T5, T6> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6>(this Harmony harmony, MethodBase target, Ref3Action<T, T2, T3, T4, T5, T6> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6>(this Harmony harmony, MethodBase target, Ref4Action<T, T2, T3, T4, T5, T6> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6>(this Harmony harmony, MethodBase target, Ref5Action<T, T2, T3, T4, T5, T6> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6>(this Harmony harmony, MethodBase target, Ref6Action<T, T2, T3, T4, T5, T6> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7>(this Harmony harmony, MethodBase target, RefAction<T, T2, T3, T4, T5, T6, T7> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7>(this Harmony harmony, MethodBase target, Ref2Action<T, T2, T3, T4, T5, T6, T7> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7>(this Harmony harmony, MethodBase target, Ref3Action<T, T2, T3, T4, T5, T6, T7> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7>(this Harmony harmony, MethodBase target, Ref4Action<T, T2, T3, T4, T5, T6, T7> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7>(this Harmony harmony, MethodBase target, Ref5Action<T, T2, T3, T4, T5, T6, T7> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7>(this Harmony harmony, MethodBase target, Ref6Action<T, T2, T3, T4, T5, T6, T7> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7>(this Harmony harmony, MethodBase target, Ref7Action<T, T2, T3, T4, T5, T6, T7> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8>(this Harmony harmony, MethodBase target, RefAction<T, T2, T3, T4, T5, T6, T7, T8> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8>(this Harmony harmony, MethodBase target, Ref2Action<T, T2, T3, T4, T5, T6, T7, T8> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8>(this Harmony harmony, MethodBase target, Ref3Action<T, T2, T3, T4, T5, T6, T7, T8> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8>(this Harmony harmony, MethodBase target, Ref4Action<T, T2, T3, T4, T5, T6, T7, T8> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8>(this Harmony harmony, MethodBase target, Ref5Action<T, T2, T3, T4, T5, T6, T7, T8> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8>(this Harmony harmony, MethodBase target, Ref6Action<T, T2, T3, T4, T5, T6, T7, T8> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8>(this Harmony harmony, MethodBase target, Ref7Action<T, T2, T3, T4, T5, T6, T7, T8> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8>(this Harmony harmony, MethodBase target, Ref8Action<T, T2, T3, T4, T5, T6, T7, T8> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9>(this Harmony harmony, MethodBase target, RefAction<T, T2, T3, T4, T5, T6, T7, T8, T9> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9>(this Harmony harmony, MethodBase target, Ref2Action<T, T2, T3, T4, T5, T6, T7, T8, T9> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9>(this Harmony harmony, MethodBase target, Ref3Action<T, T2, T3, T4, T5, T6, T7, T8, T9> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9>(this Harmony harmony, MethodBase target, Ref4Action<T, T2, T3, T4, T5, T6, T7, T8, T9> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9>(this Harmony harmony, MethodBase target, Ref5Action<T, T2, T3, T4, T5, T6, T7, T8, T9> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9>(this Harmony harmony, MethodBase target, Ref6Action<T, T2, T3, T4, T5, T6, T7, T8, T9> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9>(this Harmony harmony, MethodBase target, Ref7Action<T, T2, T3, T4, T5, T6, T7, T8, T9> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9>(this Harmony harmony, MethodBase target, Ref8Action<T, T2, T3, T4, T5, T6, T7, T8, T9> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9>(this Harmony harmony, MethodBase target, Ref9Action<T, T2, T3, T4, T5, T6, T7, T8, T9> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10>(this Harmony harmony, MethodBase target, RefAction<T, T2, T3, T4, T5, T6, T7, T8, T9, T10> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10>(this Harmony harmony, MethodBase target, Ref2Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10>(this Harmony harmony, MethodBase target, Ref3Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10>(this Harmony harmony, MethodBase target, Ref4Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10>(this Harmony harmony, MethodBase target, Ref5Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10>(this Harmony harmony, MethodBase target, Ref6Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10>(this Harmony harmony, MethodBase target, Ref7Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10>(this Harmony harmony, MethodBase target, Ref8Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10>(this Harmony harmony, MethodBase target, Ref9Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10>(this Harmony harmony, MethodBase target, Ref10Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(this Harmony harmony, MethodBase target, RefAction<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(this Harmony harmony, MethodBase target, Ref2Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(this Harmony harmony, MethodBase target, Ref3Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(this Harmony harmony, MethodBase target, Ref4Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(this Harmony harmony, MethodBase target, Ref5Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(this Harmony harmony, MethodBase target, Ref6Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(this Harmony harmony, MethodBase target, Ref7Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(this Harmony harmony, MethodBase target, Ref8Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(this Harmony harmony, MethodBase target, Ref9Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(this Harmony harmony, MethodBase target, Ref10Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(this Harmony harmony, MethodBase target, Ref11Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(this Harmony harmony, MethodBase target, RefAction<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(this Harmony harmony, MethodBase target, Ref2Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(this Harmony harmony, MethodBase target, Ref3Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(this Harmony harmony, MethodBase target, Ref4Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(this Harmony harmony, MethodBase target, Ref5Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(this Harmony harmony, MethodBase target, Ref6Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(this Harmony harmony, MethodBase target, Ref7Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(this Harmony harmony, MethodBase target, Ref8Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(this Harmony harmony, MethodBase target, Ref9Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(this Harmony harmony, MethodBase target, Ref10Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(this Harmony harmony, MethodBase target, Ref11Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(this Harmony harmony, MethodBase target, Ref12Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(this Harmony harmony, MethodBase target, RefAction<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(this Harmony harmony, MethodBase target, Ref2Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(this Harmony harmony, MethodBase target, Ref3Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(this Harmony harmony, MethodBase target, Ref4Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(this Harmony harmony, MethodBase target, Ref5Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(this Harmony harmony, MethodBase target, Ref6Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(this Harmony harmony, MethodBase target, Ref7Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(this Harmony harmony, MethodBase target, Ref8Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(this Harmony harmony, MethodBase target, Ref9Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(this Harmony harmony, MethodBase target, Ref10Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(this Harmony harmony, MethodBase target, Ref11Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(this Harmony harmony, MethodBase target, Ref12Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(this Harmony harmony, MethodBase target, Ref13Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(this Harmony harmony, MethodBase target, RefAction<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(this Harmony harmony, MethodBase target, Ref2Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(this Harmony harmony, MethodBase target, Ref3Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(this Harmony harmony, MethodBase target, Ref4Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(this Harmony harmony, MethodBase target, Ref5Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(this Harmony harmony, MethodBase target, Ref6Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(this Harmony harmony, MethodBase target, Ref7Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(this Harmony harmony, MethodBase target, Ref8Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(this Harmony harmony, MethodBase target, Ref9Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(this Harmony harmony, MethodBase target, Ref10Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(this Harmony harmony, MethodBase target, Ref11Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(this Harmony harmony, MethodBase target, Ref12Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(this Harmony harmony, MethodBase target, Ref13Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(this Harmony harmony, MethodBase target, Ref14Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(this Harmony harmony, MethodBase target, RefAction<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(this Harmony harmony, MethodBase target, Ref2Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(this Harmony harmony, MethodBase target, Ref3Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(this Harmony harmony, MethodBase target, Ref4Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(this Harmony harmony, MethodBase target, Ref5Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(this Harmony harmony, MethodBase target, Ref6Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(this Harmony harmony, MethodBase target, Ref7Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(this Harmony harmony, MethodBase target, Ref8Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(this Harmony harmony, MethodBase target, Ref9Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(this Harmony harmony, MethodBase target, Ref10Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(this Harmony harmony, MethodBase target, Ref11Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(this Harmony harmony, MethodBase target, Ref12Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(this Harmony harmony, MethodBase target, Ref13Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(this Harmony harmony, MethodBase target, Ref14Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(this Harmony harmony, MethodBase target, Ref15Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(this Harmony harmony, MethodBase target, RefAction<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(this Harmony harmony, MethodBase target, Ref2Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(this Harmony harmony, MethodBase target, Ref3Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(this Harmony harmony, MethodBase target, Ref4Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(this Harmony harmony, MethodBase target, Ref5Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(this Harmony harmony, MethodBase target, Ref6Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(this Harmony harmony, MethodBase target, Ref7Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(this Harmony harmony, MethodBase target, Ref8Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(this Harmony harmony, MethodBase target, Ref9Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(this Harmony harmony, MethodBase target, Ref10Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(this Harmony harmony, MethodBase target, Ref11Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(this Harmony harmony, MethodBase target, Ref12Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(this Harmony harmony, MethodBase target, Ref13Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(this Harmony harmony, MethodBase target, Ref14Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(this Harmony harmony, MethodBase target, Ref15Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(this Harmony harmony, MethodBase target, Ref16Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(this Harmony harmony, MethodBase target, RefAction<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(this Harmony harmony, MethodBase target, Ref2Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(this Harmony harmony, MethodBase target, Ref3Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(this Harmony harmony, MethodBase target, Ref4Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(this Harmony harmony, MethodBase target, Ref5Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(this Harmony harmony, MethodBase target, Ref6Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(this Harmony harmony, MethodBase target, Ref7Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(this Harmony harmony, MethodBase target, Ref8Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(this Harmony harmony, MethodBase target, Ref9Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(this Harmony harmony, MethodBase target, Ref10Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(this Harmony harmony, MethodBase target, Ref11Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(this Harmony harmony, MethodBase target, Ref12Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(this Harmony harmony, MethodBase target, Ref13Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(this Harmony harmony, MethodBase target, Ref14Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(this Harmony harmony, MethodBase target, Ref15Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(this Harmony harmony, MethodBase target, Ref16Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(this Harmony harmony, MethodBase target, Ref17Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(this Harmony harmony, MethodBase target, RefAction<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(this Harmony harmony, MethodBase target, Ref2Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(this Harmony harmony, MethodBase target, Ref3Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(this Harmony harmony, MethodBase target, Ref4Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(this Harmony harmony, MethodBase target, Ref5Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(this Harmony harmony, MethodBase target, Ref6Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(this Harmony harmony, MethodBase target, Ref7Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(this Harmony harmony, MethodBase target, Ref8Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(this Harmony harmony, MethodBase target, Ref9Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(this Harmony harmony, MethodBase target, Ref10Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(this Harmony harmony, MethodBase target, Ref11Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(this Harmony harmony, MethodBase target, Ref12Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(this Harmony harmony, MethodBase target, Ref13Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(this Harmony harmony, MethodBase target, Ref14Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(this Harmony harmony, MethodBase target, Ref15Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(this Harmony harmony, MethodBase target, Ref16Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(this Harmony harmony, MethodBase target, Ref17Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(this Harmony harmony, MethodBase target, Ref18Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(this Harmony harmony, MethodBase target, RefAction<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(this Harmony harmony, MethodBase target, Ref2Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(this Harmony harmony, MethodBase target, Ref3Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(this Harmony harmony, MethodBase target, Ref4Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(this Harmony harmony, MethodBase target, Ref5Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(this Harmony harmony, MethodBase target, Ref6Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(this Harmony harmony, MethodBase target, Ref7Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(this Harmony harmony, MethodBase target, Ref8Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(this Harmony harmony, MethodBase target, Ref9Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(this Harmony harmony, MethodBase target, Ref10Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(this Harmony harmony, MethodBase target, Ref11Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(this Harmony harmony, MethodBase target, Ref12Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(this Harmony harmony, MethodBase target, Ref13Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(this Harmony harmony, MethodBase target, Ref14Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(this Harmony harmony, MethodBase target, Ref15Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(this Harmony harmony, MethodBase target, Ref16Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(this Harmony harmony, MethodBase target, Ref17Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(this Harmony harmony, MethodBase target, Ref18Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(this Harmony harmony, MethodBase target, Ref19Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(this Harmony harmony, MethodBase target, RefAction<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(this Harmony harmony, MethodBase target, Ref2Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(this Harmony harmony, MethodBase target, Ref3Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(this Harmony harmony, MethodBase target, Ref4Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(this Harmony harmony, MethodBase target, Ref5Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(this Harmony harmony, MethodBase target, Ref6Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(this Harmony harmony, MethodBase target, Ref7Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(this Harmony harmony, MethodBase target, Ref8Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(this Harmony harmony, MethodBase target, Ref9Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(this Harmony harmony, MethodBase target, Ref10Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(this Harmony harmony, MethodBase target, Ref11Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(this Harmony harmony, MethodBase target, Ref12Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(this Harmony harmony, MethodBase target, Ref13Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(this Harmony harmony, MethodBase target, Ref14Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(this Harmony harmony, MethodBase target, Ref15Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(this Harmony harmony, MethodBase target, Ref16Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(this Harmony harmony, MethodBase target, Ref17Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(this Harmony harmony, MethodBase target, Ref18Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(this Harmony harmony, MethodBase target, Ref19Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(this Harmony harmony, MethodBase target, Ref20Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(this Harmony harmony, MethodBase target, RefAction<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(this Harmony harmony, MethodBase target, Ref2Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(this Harmony harmony, MethodBase target, Ref3Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(this Harmony harmony, MethodBase target, Ref4Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(this Harmony harmony, MethodBase target, Ref5Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(this Harmony harmony, MethodBase target, Ref6Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(this Harmony harmony, MethodBase target, Ref7Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(this Harmony harmony, MethodBase target, Ref8Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(this Harmony harmony, MethodBase target, Ref9Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(this Harmony harmony, MethodBase target, Ref10Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(this Harmony harmony, MethodBase target, Ref11Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(this Harmony harmony, MethodBase target, Ref12Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(this Harmony harmony, MethodBase target, Ref13Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(this Harmony harmony, MethodBase target, Ref14Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(this Harmony harmony, MethodBase target, Ref15Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(this Harmony harmony, MethodBase target, Ref16Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(this Harmony harmony, MethodBase target, Ref17Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(this Harmony harmony, MethodBase target, Ref18Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(this Harmony harmony, MethodBase target, Ref19Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(this Harmony harmony, MethodBase target, Ref20Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(this Harmony harmony, MethodBase target, Ref21Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(this Harmony harmony, MethodBase target, RefAction<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(this Harmony harmony, MethodBase target, Ref2Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(this Harmony harmony, MethodBase target, Ref3Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(this Harmony harmony, MethodBase target, Ref4Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(this Harmony harmony, MethodBase target, Ref5Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(this Harmony harmony, MethodBase target, Ref6Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(this Harmony harmony, MethodBase target, Ref7Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(this Harmony harmony, MethodBase target, Ref8Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(this Harmony harmony, MethodBase target, Ref9Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(this Harmony harmony, MethodBase target, Ref10Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(this Harmony harmony, MethodBase target, Ref11Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(this Harmony harmony, MethodBase target, Ref12Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(this Harmony harmony, MethodBase target, Ref13Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(this Harmony harmony, MethodBase target, Ref14Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(this Harmony harmony, MethodBase target, Ref15Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(this Harmony harmony, MethodBase target, Ref16Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(this Harmony harmony, MethodBase target, Ref17Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(this Harmony harmony, MethodBase target, Ref18Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(this Harmony harmony, MethodBase target, Ref19Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(this Harmony harmony, MethodBase target, Ref20Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(this Harmony harmony, MethodBase target, Ref21Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(this Harmony harmony, MethodBase target, Ref22Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(this Harmony harmony, MethodBase target, RefAction<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(this Harmony harmony, MethodBase target, Ref2Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(this Harmony harmony, MethodBase target, Ref3Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(this Harmony harmony, MethodBase target, Ref4Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(this Harmony harmony, MethodBase target, Ref5Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(this Harmony harmony, MethodBase target, Ref6Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(this Harmony harmony, MethodBase target, Ref7Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(this Harmony harmony, MethodBase target, Ref8Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(this Harmony harmony, MethodBase target, Ref9Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(this Harmony harmony, MethodBase target, Ref10Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(this Harmony harmony, MethodBase target, Ref11Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(this Harmony harmony, MethodBase target, Ref12Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(this Harmony harmony, MethodBase target, Ref13Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(this Harmony harmony, MethodBase target, Ref14Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(this Harmony harmony, MethodBase target, Ref15Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(this Harmony harmony, MethodBase target, Ref16Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(this Harmony harmony, MethodBase target, Ref17Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(this Harmony harmony, MethodBase target, Ref18Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(this Harmony harmony, MethodBase target, Ref19Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(this Harmony harmony, MethodBase target, Ref20Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(this Harmony harmony, MethodBase target, Ref21Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(this Harmony harmony, MethodBase target, Ref22Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(this Harmony harmony, MethodBase target, Ref23Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(this Harmony harmony, MethodBase target, RefAction<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(this Harmony harmony, MethodBase target, Ref2Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(this Harmony harmony, MethodBase target, Ref3Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(this Harmony harmony, MethodBase target, Ref4Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(this Harmony harmony, MethodBase target, Ref5Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(this Harmony harmony, MethodBase target, Ref6Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(this Harmony harmony, MethodBase target, Ref7Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(this Harmony harmony, MethodBase target, Ref8Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(this Harmony harmony, MethodBase target, Ref9Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(this Harmony harmony, MethodBase target, Ref10Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(this Harmony harmony, MethodBase target, Ref11Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(this Harmony harmony, MethodBase target, Ref12Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(this Harmony harmony, MethodBase target, Ref13Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(this Harmony harmony, MethodBase target, Ref14Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(this Harmony harmony, MethodBase target, Ref15Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(this Harmony harmony, MethodBase target, Ref16Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(this Harmony harmony, MethodBase target, Ref17Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(this Harmony harmony, MethodBase target, Ref18Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(this Harmony harmony, MethodBase target, Ref19Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(this Harmony harmony, MethodBase target, Ref20Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(this Harmony harmony, MethodBase target, Ref21Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(this Harmony harmony, MethodBase target, Ref22Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(this Harmony harmony, MethodBase target, Ref23Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(this Harmony harmony, MethodBase target, Ref24Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(this Harmony harmony, MethodBase target, RefAction<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(this Harmony harmony, MethodBase target, Ref2Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(this Harmony harmony, MethodBase target, Ref3Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(this Harmony harmony, MethodBase target, Ref4Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(this Harmony harmony, MethodBase target, Ref5Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(this Harmony harmony, MethodBase target, Ref6Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(this Harmony harmony, MethodBase target, Ref7Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(this Harmony harmony, MethodBase target, Ref8Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(this Harmony harmony, MethodBase target, Ref9Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(this Harmony harmony, MethodBase target, Ref10Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(this Harmony harmony, MethodBase target, Ref11Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(this Harmony harmony, MethodBase target, Ref12Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(this Harmony harmony, MethodBase target, Ref13Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(this Harmony harmony, MethodBase target, Ref14Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(this Harmony harmony, MethodBase target, Ref15Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(this Harmony harmony, MethodBase target, Ref16Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(this Harmony harmony, MethodBase target, Ref17Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(this Harmony harmony, MethodBase target, Ref18Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(this Harmony harmony, MethodBase target, Ref19Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(this Harmony harmony, MethodBase target, Ref20Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(this Harmony harmony, MethodBase target, Ref21Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(this Harmony harmony, MethodBase target, Ref22Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(this Harmony harmony, MethodBase target, Ref23Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(this Harmony harmony, MethodBase target, Ref24Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(this Harmony harmony, MethodBase target, Ref25Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(this Harmony harmony, MethodBase target, RefAction<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(this Harmony harmony, MethodBase target, Ref2Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(this Harmony harmony, MethodBase target, Ref3Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(this Harmony harmony, MethodBase target, Ref4Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(this Harmony harmony, MethodBase target, Ref5Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(this Harmony harmony, MethodBase target, Ref6Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(this Harmony harmony, MethodBase target, Ref7Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(this Harmony harmony, MethodBase target, Ref8Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(this Harmony harmony, MethodBase target, Ref9Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(this Harmony harmony, MethodBase target, Ref10Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(this Harmony harmony, MethodBase target, Ref11Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(this Harmony harmony, MethodBase target, Ref12Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(this Harmony harmony, MethodBase target, Ref13Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(this Harmony harmony, MethodBase target, Ref14Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(this Harmony harmony, MethodBase target, Ref15Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(this Harmony harmony, MethodBase target, Ref16Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(this Harmony harmony, MethodBase target, Ref17Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(this Harmony harmony, MethodBase target, Ref18Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(this Harmony harmony, MethodBase target, Ref19Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(this Harmony harmony, MethodBase target, Ref20Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(this Harmony harmony, MethodBase target, Ref21Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(this Harmony harmony, MethodBase target, Ref22Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(this Harmony harmony, MethodBase target, Ref23Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(this Harmony harmony, MethodBase target, Ref24Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(this Harmony harmony, MethodBase target, Ref25Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(this Harmony harmony, MethodBase target, Ref26Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, RefAction<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, Ref2Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, Ref3Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, Ref4Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, Ref5Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, Ref6Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, Ref7Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, Ref8Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, Ref9Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, Ref10Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, Ref11Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, Ref12Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, Ref13Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, Ref14Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, Ref15Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, Ref16Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, Ref17Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, Ref18Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, Ref19Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, Ref20Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, Ref21Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, Ref22Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, Ref23Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, Ref24Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, Ref25Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, Ref26Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, Ref27Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, RefAction<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Ref2Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Ref3Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Ref4Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Ref5Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Ref6Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Ref7Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Ref8Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Ref9Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Ref10Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Ref11Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Ref12Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Ref13Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Ref14Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Ref15Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Ref16Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Ref17Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Ref18Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Ref19Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Ref20Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Ref21Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Ref22Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Ref23Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Ref24Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Ref25Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Ref26Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Ref27Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Ref28Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, RefAction<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref2Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref3Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref4Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref5Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref6Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref7Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref8Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref9Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref10Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref11Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref12Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref13Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref14Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref15Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref16Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref17Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref18Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref19Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref20Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref21Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref22Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref23Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref24Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref25Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref26Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref27Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref28Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref29Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, RefAction<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref2Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref3Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref4Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref5Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref6Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref7Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref8Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref9Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref10Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref11Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref12Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref13Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref14Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref15Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref16Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref17Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref18Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref19Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref20Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref21Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref22Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref23Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref24Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref25Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref26Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref27Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref28Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref29Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref30Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, RefAction<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref2Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref3Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref4Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref5Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref6Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref7Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref8Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref9Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref10Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref11Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref12Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref13Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref14Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref15Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref16Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref17Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref18Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref19Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref20Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref21Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref22Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref23Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref24Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref25Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref26Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref27Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref28Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref29Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref30Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref31Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, RefAction<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref2Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref3Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref4Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref5Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref6Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref7Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref8Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref9Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref10Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref11Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref12Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref13Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref14Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref15Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref16Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref17Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref18Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref19Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref20Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref21Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref22Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref23Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref24Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref25Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref26Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref27Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref28Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref29Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref30Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref31Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref32Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T>(this Harmony harmony, MethodBase target, RefFunc<T, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2>(this Harmony harmony, MethodBase target, RefFunc<T, T2, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2>(this Harmony harmony, MethodBase target, Ref2Func<T, T2, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3>(this Harmony harmony, MethodBase target, RefFunc<T, T2, T3, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3>(this Harmony harmony, MethodBase target, Ref2Func<T, T2, T3, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3>(this Harmony harmony, MethodBase target, Ref3Func<T, T2, T3, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4>(this Harmony harmony, MethodBase target, RefFunc<T, T2, T3, T4, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4>(this Harmony harmony, MethodBase target, Ref2Func<T, T2, T3, T4, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4>(this Harmony harmony, MethodBase target, Ref3Func<T, T2, T3, T4, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4>(this Harmony harmony, MethodBase target, Ref4Func<T, T2, T3, T4, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5>(this Harmony harmony, MethodBase target, RefFunc<T, T2, T3, T4, T5, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5>(this Harmony harmony, MethodBase target, Ref2Func<T, T2, T3, T4, T5, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5>(this Harmony harmony, MethodBase target, Ref3Func<T, T2, T3, T4, T5, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5>(this Harmony harmony, MethodBase target, Ref4Func<T, T2, T3, T4, T5, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5>(this Harmony harmony, MethodBase target, Ref5Func<T, T2, T3, T4, T5, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6>(this Harmony harmony, MethodBase target, RefFunc<T, T2, T3, T4, T5, T6, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6>(this Harmony harmony, MethodBase target, Ref2Func<T, T2, T3, T4, T5, T6, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6>(this Harmony harmony, MethodBase target, Ref3Func<T, T2, T3, T4, T5, T6, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6>(this Harmony harmony, MethodBase target, Ref4Func<T, T2, T3, T4, T5, T6, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6>(this Harmony harmony, MethodBase target, Ref5Func<T, T2, T3, T4, T5, T6, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6>(this Harmony harmony, MethodBase target, Ref6Func<T, T2, T3, T4, T5, T6, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7>(this Harmony harmony, MethodBase target, RefFunc<T, T2, T3, T4, T5, T6, T7, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7>(this Harmony harmony, MethodBase target, Ref2Func<T, T2, T3, T4, T5, T6, T7, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7>(this Harmony harmony, MethodBase target, Ref3Func<T, T2, T3, T4, T5, T6, T7, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7>(this Harmony harmony, MethodBase target, Ref4Func<T, T2, T3, T4, T5, T6, T7, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7>(this Harmony harmony, MethodBase target, Ref5Func<T, T2, T3, T4, T5, T6, T7, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7>(this Harmony harmony, MethodBase target, Ref6Func<T, T2, T3, T4, T5, T6, T7, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7>(this Harmony harmony, MethodBase target, Ref7Func<T, T2, T3, T4, T5, T6, T7, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8>(this Harmony harmony, MethodBase target, RefFunc<T, T2, T3, T4, T5, T6, T7, T8, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8>(this Harmony harmony, MethodBase target, Ref2Func<T, T2, T3, T4, T5, T6, T7, T8, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8>(this Harmony harmony, MethodBase target, Ref3Func<T, T2, T3, T4, T5, T6, T7, T8, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8>(this Harmony harmony, MethodBase target, Ref4Func<T, T2, T3, T4, T5, T6, T7, T8, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8>(this Harmony harmony, MethodBase target, Ref5Func<T, T2, T3, T4, T5, T6, T7, T8, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8>(this Harmony harmony, MethodBase target, Ref6Func<T, T2, T3, T4, T5, T6, T7, T8, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8>(this Harmony harmony, MethodBase target, Ref7Func<T, T2, T3, T4, T5, T6, T7, T8, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8>(this Harmony harmony, MethodBase target, Ref8Func<T, T2, T3, T4, T5, T6, T7, T8, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9>(this Harmony harmony, MethodBase target, RefFunc<T, T2, T3, T4, T5, T6, T7, T8, T9, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9>(this Harmony harmony, MethodBase target, Ref2Func<T, T2, T3, T4, T5, T6, T7, T8, T9, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9>(this Harmony harmony, MethodBase target, Ref3Func<T, T2, T3, T4, T5, T6, T7, T8, T9, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9>(this Harmony harmony, MethodBase target, Ref4Func<T, T2, T3, T4, T5, T6, T7, T8, T9, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9>(this Harmony harmony, MethodBase target, Ref5Func<T, T2, T3, T4, T5, T6, T7, T8, T9, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9>(this Harmony harmony, MethodBase target, Ref6Func<T, T2, T3, T4, T5, T6, T7, T8, T9, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9>(this Harmony harmony, MethodBase target, Ref7Func<T, T2, T3, T4, T5, T6, T7, T8, T9, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9>(this Harmony harmony, MethodBase target, Ref8Func<T, T2, T3, T4, T5, T6, T7, T8, T9, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9>(this Harmony harmony, MethodBase target, Ref9Func<T, T2, T3, T4, T5, T6, T7, T8, T9, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10>(this Harmony harmony, MethodBase target, RefFunc<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10>(this Harmony harmony, MethodBase target, Ref2Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10>(this Harmony harmony, MethodBase target, Ref3Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10>(this Harmony harmony, MethodBase target, Ref4Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10>(this Harmony harmony, MethodBase target, Ref5Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10>(this Harmony harmony, MethodBase target, Ref6Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10>(this Harmony harmony, MethodBase target, Ref7Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10>(this Harmony harmony, MethodBase target, Ref8Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10>(this Harmony harmony, MethodBase target, Ref9Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10>(this Harmony harmony, MethodBase target, Ref10Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(this Harmony harmony, MethodBase target, RefFunc<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(this Harmony harmony, MethodBase target, Ref2Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(this Harmony harmony, MethodBase target, Ref3Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(this Harmony harmony, MethodBase target, Ref4Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(this Harmony harmony, MethodBase target, Ref5Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(this Harmony harmony, MethodBase target, Ref6Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(this Harmony harmony, MethodBase target, Ref7Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(this Harmony harmony, MethodBase target, Ref8Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(this Harmony harmony, MethodBase target, Ref9Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(this Harmony harmony, MethodBase target, Ref10Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(this Harmony harmony, MethodBase target, Ref11Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(this Harmony harmony, MethodBase target, RefFunc<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(this Harmony harmony, MethodBase target, Ref2Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(this Harmony harmony, MethodBase target, Ref3Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(this Harmony harmony, MethodBase target, Ref4Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(this Harmony harmony, MethodBase target, Ref5Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(this Harmony harmony, MethodBase target, Ref6Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(this Harmony harmony, MethodBase target, Ref7Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(this Harmony harmony, MethodBase target, Ref8Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(this Harmony harmony, MethodBase target, Ref9Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(this Harmony harmony, MethodBase target, Ref10Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(this Harmony harmony, MethodBase target, Ref11Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(this Harmony harmony, MethodBase target, Ref12Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(this Harmony harmony, MethodBase target, RefFunc<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(this Harmony harmony, MethodBase target, Ref2Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(this Harmony harmony, MethodBase target, Ref3Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(this Harmony harmony, MethodBase target, Ref4Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(this Harmony harmony, MethodBase target, Ref5Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(this Harmony harmony, MethodBase target, Ref6Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(this Harmony harmony, MethodBase target, Ref7Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(this Harmony harmony, MethodBase target, Ref8Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(this Harmony harmony, MethodBase target, Ref9Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(this Harmony harmony, MethodBase target, Ref10Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(this Harmony harmony, MethodBase target, Ref11Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(this Harmony harmony, MethodBase target, Ref12Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(this Harmony harmony, MethodBase target, Ref13Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(this Harmony harmony, MethodBase target, RefFunc<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(this Harmony harmony, MethodBase target, Ref2Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(this Harmony harmony, MethodBase target, Ref3Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(this Harmony harmony, MethodBase target, Ref4Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(this Harmony harmony, MethodBase target, Ref5Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(this Harmony harmony, MethodBase target, Ref6Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(this Harmony harmony, MethodBase target, Ref7Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(this Harmony harmony, MethodBase target, Ref8Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(this Harmony harmony, MethodBase target, Ref9Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(this Harmony harmony, MethodBase target, Ref10Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(this Harmony harmony, MethodBase target, Ref11Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(this Harmony harmony, MethodBase target, Ref12Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(this Harmony harmony, MethodBase target, Ref13Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(this Harmony harmony, MethodBase target, Ref14Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(this Harmony harmony, MethodBase target, RefFunc<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(this Harmony harmony, MethodBase target, Ref2Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(this Harmony harmony, MethodBase target, Ref3Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(this Harmony harmony, MethodBase target, Ref4Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(this Harmony harmony, MethodBase target, Ref5Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(this Harmony harmony, MethodBase target, Ref6Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(this Harmony harmony, MethodBase target, Ref7Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(this Harmony harmony, MethodBase target, Ref8Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(this Harmony harmony, MethodBase target, Ref9Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(this Harmony harmony, MethodBase target, Ref10Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(this Harmony harmony, MethodBase target, Ref11Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(this Harmony harmony, MethodBase target, Ref12Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(this Harmony harmony, MethodBase target, Ref13Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(this Harmony harmony, MethodBase target, Ref14Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(this Harmony harmony, MethodBase target, Ref15Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(this Harmony harmony, MethodBase target, RefFunc<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(this Harmony harmony, MethodBase target, Ref2Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(this Harmony harmony, MethodBase target, Ref3Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(this Harmony harmony, MethodBase target, Ref4Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(this Harmony harmony, MethodBase target, Ref5Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(this Harmony harmony, MethodBase target, Ref6Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(this Harmony harmony, MethodBase target, Ref7Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(this Harmony harmony, MethodBase target, Ref8Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(this Harmony harmony, MethodBase target, Ref9Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(this Harmony harmony, MethodBase target, Ref10Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(this Harmony harmony, MethodBase target, Ref11Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(this Harmony harmony, MethodBase target, Ref12Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(this Harmony harmony, MethodBase target, Ref13Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(this Harmony harmony, MethodBase target, Ref14Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(this Harmony harmony, MethodBase target, Ref15Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(this Harmony harmony, MethodBase target, Ref16Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(this Harmony harmony, MethodBase target, RefFunc<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(this Harmony harmony, MethodBase target, Ref2Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(this Harmony harmony, MethodBase target, Ref3Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(this Harmony harmony, MethodBase target, Ref4Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(this Harmony harmony, MethodBase target, Ref5Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(this Harmony harmony, MethodBase target, Ref6Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(this Harmony harmony, MethodBase target, Ref7Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(this Harmony harmony, MethodBase target, Ref8Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(this Harmony harmony, MethodBase target, Ref9Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(this Harmony harmony, MethodBase target, Ref10Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(this Harmony harmony, MethodBase target, Ref11Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(this Harmony harmony, MethodBase target, Ref12Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(this Harmony harmony, MethodBase target, Ref13Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(this Harmony harmony, MethodBase target, Ref14Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(this Harmony harmony, MethodBase target, Ref15Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(this Harmony harmony, MethodBase target, Ref16Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(this Harmony harmony, MethodBase target, Ref17Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(this Harmony harmony, MethodBase target, RefFunc<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(this Harmony harmony, MethodBase target, Ref2Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(this Harmony harmony, MethodBase target, Ref3Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(this Harmony harmony, MethodBase target, Ref4Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(this Harmony harmony, MethodBase target, Ref5Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(this Harmony harmony, MethodBase target, Ref6Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(this Harmony harmony, MethodBase target, Ref7Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(this Harmony harmony, MethodBase target, Ref8Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(this Harmony harmony, MethodBase target, Ref9Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(this Harmony harmony, MethodBase target, Ref10Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(this Harmony harmony, MethodBase target, Ref11Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(this Harmony harmony, MethodBase target, Ref12Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(this Harmony harmony, MethodBase target, Ref13Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(this Harmony harmony, MethodBase target, Ref14Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(this Harmony harmony, MethodBase target, Ref15Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(this Harmony harmony, MethodBase target, Ref16Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(this Harmony harmony, MethodBase target, Ref17Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(this Harmony harmony, MethodBase target, Ref18Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(this Harmony harmony, MethodBase target, RefFunc<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(this Harmony harmony, MethodBase target, Ref2Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(this Harmony harmony, MethodBase target, Ref3Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(this Harmony harmony, MethodBase target, Ref4Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(this Harmony harmony, MethodBase target, Ref5Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(this Harmony harmony, MethodBase target, Ref6Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(this Harmony harmony, MethodBase target, Ref7Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(this Harmony harmony, MethodBase target, Ref8Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(this Harmony harmony, MethodBase target, Ref9Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(this Harmony harmony, MethodBase target, Ref10Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(this Harmony harmony, MethodBase target, Ref11Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(this Harmony harmony, MethodBase target, Ref12Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(this Harmony harmony, MethodBase target, Ref13Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(this Harmony harmony, MethodBase target, Ref14Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(this Harmony harmony, MethodBase target, Ref15Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(this Harmony harmony, MethodBase target, Ref16Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(this Harmony harmony, MethodBase target, Ref17Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(this Harmony harmony, MethodBase target, Ref18Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(this Harmony harmony, MethodBase target, Ref19Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(this Harmony harmony, MethodBase target, RefFunc<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(this Harmony harmony, MethodBase target, Ref2Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(this Harmony harmony, MethodBase target, Ref3Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(this Harmony harmony, MethodBase target, Ref4Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(this Harmony harmony, MethodBase target, Ref5Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(this Harmony harmony, MethodBase target, Ref6Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(this Harmony harmony, MethodBase target, Ref7Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(this Harmony harmony, MethodBase target, Ref8Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(this Harmony harmony, MethodBase target, Ref9Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(this Harmony harmony, MethodBase target, Ref10Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(this Harmony harmony, MethodBase target, Ref11Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(this Harmony harmony, MethodBase target, Ref12Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(this Harmony harmony, MethodBase target, Ref13Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(this Harmony harmony, MethodBase target, Ref14Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(this Harmony harmony, MethodBase target, Ref15Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(this Harmony harmony, MethodBase target, Ref16Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(this Harmony harmony, MethodBase target, Ref17Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(this Harmony harmony, MethodBase target, Ref18Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(this Harmony harmony, MethodBase target, Ref19Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(this Harmony harmony, MethodBase target, Ref20Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(this Harmony harmony, MethodBase target, RefFunc<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(this Harmony harmony, MethodBase target, Ref2Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(this Harmony harmony, MethodBase target, Ref3Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(this Harmony harmony, MethodBase target, Ref4Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(this Harmony harmony, MethodBase target, Ref5Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(this Harmony harmony, MethodBase target, Ref6Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(this Harmony harmony, MethodBase target, Ref7Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(this Harmony harmony, MethodBase target, Ref8Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(this Harmony harmony, MethodBase target, Ref9Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(this Harmony harmony, MethodBase target, Ref10Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(this Harmony harmony, MethodBase target, Ref11Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(this Harmony harmony, MethodBase target, Ref12Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(this Harmony harmony, MethodBase target, Ref13Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(this Harmony harmony, MethodBase target, Ref14Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(this Harmony harmony, MethodBase target, Ref15Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(this Harmony harmony, MethodBase target, Ref16Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(this Harmony harmony, MethodBase target, Ref17Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(this Harmony harmony, MethodBase target, Ref18Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(this Harmony harmony, MethodBase target, Ref19Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(this Harmony harmony, MethodBase target, Ref20Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(this Harmony harmony, MethodBase target, Ref21Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(this Harmony harmony, MethodBase target, RefFunc<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(this Harmony harmony, MethodBase target, Ref2Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(this Harmony harmony, MethodBase target, Ref3Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(this Harmony harmony, MethodBase target, Ref4Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(this Harmony harmony, MethodBase target, Ref5Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(this Harmony harmony, MethodBase target, Ref6Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(this Harmony harmony, MethodBase target, Ref7Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(this Harmony harmony, MethodBase target, Ref8Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(this Harmony harmony, MethodBase target, Ref9Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(this Harmony harmony, MethodBase target, Ref10Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(this Harmony harmony, MethodBase target, Ref11Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(this Harmony harmony, MethodBase target, Ref12Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(this Harmony harmony, MethodBase target, Ref13Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(this Harmony harmony, MethodBase target, Ref14Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(this Harmony harmony, MethodBase target, Ref15Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(this Harmony harmony, MethodBase target, Ref16Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(this Harmony harmony, MethodBase target, Ref17Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(this Harmony harmony, MethodBase target, Ref18Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(this Harmony harmony, MethodBase target, Ref19Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(this Harmony harmony, MethodBase target, Ref20Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(this Harmony harmony, MethodBase target, Ref21Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(this Harmony harmony, MethodBase target, Ref22Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(this Harmony harmony, MethodBase target, RefFunc<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(this Harmony harmony, MethodBase target, Ref2Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(this Harmony harmony, MethodBase target, Ref3Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(this Harmony harmony, MethodBase target, Ref4Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(this Harmony harmony, MethodBase target, Ref5Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(this Harmony harmony, MethodBase target, Ref6Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(this Harmony harmony, MethodBase target, Ref7Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(this Harmony harmony, MethodBase target, Ref8Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(this Harmony harmony, MethodBase target, Ref9Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(this Harmony harmony, MethodBase target, Ref10Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(this Harmony harmony, MethodBase target, Ref11Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(this Harmony harmony, MethodBase target, Ref12Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(this Harmony harmony, MethodBase target, Ref13Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(this Harmony harmony, MethodBase target, Ref14Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(this Harmony harmony, MethodBase target, Ref15Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(this Harmony harmony, MethodBase target, Ref16Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(this Harmony harmony, MethodBase target, Ref17Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(this Harmony harmony, MethodBase target, Ref18Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(this Harmony harmony, MethodBase target, Ref19Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(this Harmony harmony, MethodBase target, Ref20Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(this Harmony harmony, MethodBase target, Ref21Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(this Harmony harmony, MethodBase target, Ref22Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(this Harmony harmony, MethodBase target, Ref23Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(this Harmony harmony, MethodBase target, RefFunc<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(this Harmony harmony, MethodBase target, Ref2Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(this Harmony harmony, MethodBase target, Ref3Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(this Harmony harmony, MethodBase target, Ref4Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(this Harmony harmony, MethodBase target, Ref5Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(this Harmony harmony, MethodBase target, Ref6Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(this Harmony harmony, MethodBase target, Ref7Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(this Harmony harmony, MethodBase target, Ref8Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(this Harmony harmony, MethodBase target, Ref9Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(this Harmony harmony, MethodBase target, Ref10Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(this Harmony harmony, MethodBase target, Ref11Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(this Harmony harmony, MethodBase target, Ref12Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(this Harmony harmony, MethodBase target, Ref13Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(this Harmony harmony, MethodBase target, Ref14Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(this Harmony harmony, MethodBase target, Ref15Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(this Harmony harmony, MethodBase target, Ref16Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(this Harmony harmony, MethodBase target, Ref17Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(this Harmony harmony, MethodBase target, Ref18Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(this Harmony harmony, MethodBase target, Ref19Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(this Harmony harmony, MethodBase target, Ref20Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(this Harmony harmony, MethodBase target, Ref21Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(this Harmony harmony, MethodBase target, Ref22Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(this Harmony harmony, MethodBase target, Ref23Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(this Harmony harmony, MethodBase target, Ref24Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(this Harmony harmony, MethodBase target, RefFunc<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(this Harmony harmony, MethodBase target, Ref2Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(this Harmony harmony, MethodBase target, Ref3Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(this Harmony harmony, MethodBase target, Ref4Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(this Harmony harmony, MethodBase target, Ref5Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(this Harmony harmony, MethodBase target, Ref6Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(this Harmony harmony, MethodBase target, Ref7Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(this Harmony harmony, MethodBase target, Ref8Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(this Harmony harmony, MethodBase target, Ref9Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(this Harmony harmony, MethodBase target, Ref10Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(this Harmony harmony, MethodBase target, Ref11Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(this Harmony harmony, MethodBase target, Ref12Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(this Harmony harmony, MethodBase target, Ref13Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(this Harmony harmony, MethodBase target, Ref14Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(this Harmony harmony, MethodBase target, Ref15Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(this Harmony harmony, MethodBase target, Ref16Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(this Harmony harmony, MethodBase target, Ref17Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(this Harmony harmony, MethodBase target, Ref18Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(this Harmony harmony, MethodBase target, Ref19Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(this Harmony harmony, MethodBase target, Ref20Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(this Harmony harmony, MethodBase target, Ref21Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(this Harmony harmony, MethodBase target, Ref22Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(this Harmony harmony, MethodBase target, Ref23Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(this Harmony harmony, MethodBase target, Ref24Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(this Harmony harmony, MethodBase target, Ref25Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(this Harmony harmony, MethodBase target, RefFunc<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(this Harmony harmony, MethodBase target, Ref2Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(this Harmony harmony, MethodBase target, Ref3Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(this Harmony harmony, MethodBase target, Ref4Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(this Harmony harmony, MethodBase target, Ref5Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(this Harmony harmony, MethodBase target, Ref6Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(this Harmony harmony, MethodBase target, Ref7Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(this Harmony harmony, MethodBase target, Ref8Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(this Harmony harmony, MethodBase target, Ref9Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(this Harmony harmony, MethodBase target, Ref10Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(this Harmony harmony, MethodBase target, Ref11Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(this Harmony harmony, MethodBase target, Ref12Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(this Harmony harmony, MethodBase target, Ref13Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(this Harmony harmony, MethodBase target, Ref14Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(this Harmony harmony, MethodBase target, Ref15Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(this Harmony harmony, MethodBase target, Ref16Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(this Harmony harmony, MethodBase target, Ref17Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(this Harmony harmony, MethodBase target, Ref18Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(this Harmony harmony, MethodBase target, Ref19Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(this Harmony harmony, MethodBase target, Ref20Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(this Harmony harmony, MethodBase target, Ref21Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(this Harmony harmony, MethodBase target, Ref22Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(this Harmony harmony, MethodBase target, Ref23Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(this Harmony harmony, MethodBase target, Ref24Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(this Harmony harmony, MethodBase target, Ref25Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(this Harmony harmony, MethodBase target, Ref26Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, RefFunc<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, Ref2Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, Ref3Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, Ref4Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, Ref5Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, Ref6Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, Ref7Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, Ref8Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, Ref9Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, Ref10Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, Ref11Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, Ref12Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, Ref13Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, Ref14Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, Ref15Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, Ref16Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, Ref17Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, Ref18Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, Ref19Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, Ref20Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, Ref21Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, Ref22Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, Ref23Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, Ref24Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, Ref25Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, Ref26Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, Ref27Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, RefFunc<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Ref2Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Ref3Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Ref4Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Ref5Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Ref6Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Ref7Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Ref8Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Ref9Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Ref10Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Ref11Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Ref12Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Ref13Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Ref14Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Ref15Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Ref16Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Ref17Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Ref18Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Ref19Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Ref20Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Ref21Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Ref22Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Ref23Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Ref24Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Ref25Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Ref26Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Ref27Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Ref28Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, RefFunc<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref2Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref3Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref4Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref5Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref6Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref7Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref8Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref9Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref10Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref11Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref12Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref13Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref14Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref15Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref16Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref17Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref18Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref19Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref20Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref21Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref22Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref23Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref24Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref25Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref26Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref27Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref28Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref29Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, RefFunc<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref2Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref3Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref4Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref5Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref6Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref7Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref8Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref9Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref10Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref11Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref12Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref13Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref14Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref15Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref16Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref17Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref18Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref19Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref20Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref21Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref22Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref23Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref24Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref25Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref26Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref27Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref28Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref29Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref30Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, RefFunc<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref2Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref3Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref4Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref5Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref6Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref7Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref8Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref9Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref10Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref11Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref12Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref13Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref14Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref15Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref16Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref17Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref18Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref19Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref20Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref21Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref22Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref23Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref24Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref25Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref26Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref27Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref28Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref29Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref30Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref31Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, RefFunc<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref2Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref3Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref4Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref5Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref6Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref7Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref8Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref9Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref10Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref11Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref12Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref13Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref14Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref15Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref16Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref17Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref18Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref19Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref20Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref21Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref22Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref23Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref24Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref25Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref26Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref27Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref28Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref29Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref30Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref31Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Prefix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref32Func<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, bool> patch) => harmony.Patch(target, new HarmonyMethod(Wrap(patch)));
        #endregion
        #region Postfix
        public static MethodInfo Postfix(this Harmony harmony, MethodBase target, Delegate patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix(this Harmony harmony, MethodBase target, Action patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T>(this Harmony harmony, MethodBase target, Action<T> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2>(this Harmony harmony, MethodBase target, Action<T, T2> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3>(this Harmony harmony, MethodBase target, Action<T, T2, T3> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4>(this Harmony harmony, MethodBase target, Action<T, T2, T3, T4> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5>(this Harmony harmony, MethodBase target, Action<T, T2, T3, T4, T5> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6>(this Harmony harmony, MethodBase target, Action<T, T2, T3, T4, T5, T6> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7>(this Harmony harmony, MethodBase target, Action<T, T2, T3, T4, T5, T6, T7> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8>(this Harmony harmony, MethodBase target, Action<T, T2, T3, T4, T5, T6, T7, T8> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9>(this Harmony harmony, MethodBase target, Action<T, T2, T3, T4, T5, T6, T7, T8, T9> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10>(this Harmony harmony, MethodBase target, Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(this Harmony harmony, MethodBase target, Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(this Harmony harmony, MethodBase target, Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(this Harmony harmony, MethodBase target, Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(this Harmony harmony, MethodBase target, Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(this Harmony harmony, MethodBase target, Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(this Harmony harmony, MethodBase target, Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(this Harmony harmony, MethodBase target, Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(this Harmony harmony, MethodBase target, Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(this Harmony harmony, MethodBase target, Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(this Harmony harmony, MethodBase target, Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(this Harmony harmony, MethodBase target, Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(this Harmony harmony, MethodBase target, Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(this Harmony harmony, MethodBase target, Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(this Harmony harmony, MethodBase target, Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(this Harmony harmony, MethodBase target, Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(this Harmony harmony, MethodBase target, Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T>(this Harmony harmony, MethodBase target, RefAction<T> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2>(this Harmony harmony, MethodBase target, RefAction<T, T2> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2>(this Harmony harmony, MethodBase target, Ref2Action<T, T2> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3>(this Harmony harmony, MethodBase target, RefAction<T, T2, T3> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3>(this Harmony harmony, MethodBase target, Ref2Action<T, T2, T3> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3>(this Harmony harmony, MethodBase target, Ref3Action<T, T2, T3> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4>(this Harmony harmony, MethodBase target, RefAction<T, T2, T3, T4> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4>(this Harmony harmony, MethodBase target, Ref2Action<T, T2, T3, T4> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4>(this Harmony harmony, MethodBase target, Ref3Action<T, T2, T3, T4> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4>(this Harmony harmony, MethodBase target, Ref4Action<T, T2, T3, T4> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5>(this Harmony harmony, MethodBase target, RefAction<T, T2, T3, T4, T5> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5>(this Harmony harmony, MethodBase target, Ref2Action<T, T2, T3, T4, T5> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5>(this Harmony harmony, MethodBase target, Ref3Action<T, T2, T3, T4, T5> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5>(this Harmony harmony, MethodBase target, Ref4Action<T, T2, T3, T4, T5> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5>(this Harmony harmony, MethodBase target, Ref5Action<T, T2, T3, T4, T5> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6>(this Harmony harmony, MethodBase target, RefAction<T, T2, T3, T4, T5, T6> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6>(this Harmony harmony, MethodBase target, Ref2Action<T, T2, T3, T4, T5, T6> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6>(this Harmony harmony, MethodBase target, Ref3Action<T, T2, T3, T4, T5, T6> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6>(this Harmony harmony, MethodBase target, Ref4Action<T, T2, T3, T4, T5, T6> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6>(this Harmony harmony, MethodBase target, Ref5Action<T, T2, T3, T4, T5, T6> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6>(this Harmony harmony, MethodBase target, Ref6Action<T, T2, T3, T4, T5, T6> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7>(this Harmony harmony, MethodBase target, RefAction<T, T2, T3, T4, T5, T6, T7> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7>(this Harmony harmony, MethodBase target, Ref2Action<T, T2, T3, T4, T5, T6, T7> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7>(this Harmony harmony, MethodBase target, Ref3Action<T, T2, T3, T4, T5, T6, T7> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7>(this Harmony harmony, MethodBase target, Ref4Action<T, T2, T3, T4, T5, T6, T7> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7>(this Harmony harmony, MethodBase target, Ref5Action<T, T2, T3, T4, T5, T6, T7> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7>(this Harmony harmony, MethodBase target, Ref6Action<T, T2, T3, T4, T5, T6, T7> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7>(this Harmony harmony, MethodBase target, Ref7Action<T, T2, T3, T4, T5, T6, T7> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8>(this Harmony harmony, MethodBase target, RefAction<T, T2, T3, T4, T5, T6, T7, T8> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8>(this Harmony harmony, MethodBase target, Ref2Action<T, T2, T3, T4, T5, T6, T7, T8> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8>(this Harmony harmony, MethodBase target, Ref3Action<T, T2, T3, T4, T5, T6, T7, T8> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8>(this Harmony harmony, MethodBase target, Ref4Action<T, T2, T3, T4, T5, T6, T7, T8> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8>(this Harmony harmony, MethodBase target, Ref5Action<T, T2, T3, T4, T5, T6, T7, T8> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8>(this Harmony harmony, MethodBase target, Ref6Action<T, T2, T3, T4, T5, T6, T7, T8> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8>(this Harmony harmony, MethodBase target, Ref7Action<T, T2, T3, T4, T5, T6, T7, T8> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8>(this Harmony harmony, MethodBase target, Ref8Action<T, T2, T3, T4, T5, T6, T7, T8> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9>(this Harmony harmony, MethodBase target, RefAction<T, T2, T3, T4, T5, T6, T7, T8, T9> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9>(this Harmony harmony, MethodBase target, Ref2Action<T, T2, T3, T4, T5, T6, T7, T8, T9> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9>(this Harmony harmony, MethodBase target, Ref3Action<T, T2, T3, T4, T5, T6, T7, T8, T9> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9>(this Harmony harmony, MethodBase target, Ref4Action<T, T2, T3, T4, T5, T6, T7, T8, T9> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9>(this Harmony harmony, MethodBase target, Ref5Action<T, T2, T3, T4, T5, T6, T7, T8, T9> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9>(this Harmony harmony, MethodBase target, Ref6Action<T, T2, T3, T4, T5, T6, T7, T8, T9> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9>(this Harmony harmony, MethodBase target, Ref7Action<T, T2, T3, T4, T5, T6, T7, T8, T9> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9>(this Harmony harmony, MethodBase target, Ref8Action<T, T2, T3, T4, T5, T6, T7, T8, T9> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9>(this Harmony harmony, MethodBase target, Ref9Action<T, T2, T3, T4, T5, T6, T7, T8, T9> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10>(this Harmony harmony, MethodBase target, RefAction<T, T2, T3, T4, T5, T6, T7, T8, T9, T10> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10>(this Harmony harmony, MethodBase target, Ref2Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10>(this Harmony harmony, MethodBase target, Ref3Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10>(this Harmony harmony, MethodBase target, Ref4Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10>(this Harmony harmony, MethodBase target, Ref5Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10>(this Harmony harmony, MethodBase target, Ref6Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10>(this Harmony harmony, MethodBase target, Ref7Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10>(this Harmony harmony, MethodBase target, Ref8Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10>(this Harmony harmony, MethodBase target, Ref9Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10>(this Harmony harmony, MethodBase target, Ref10Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(this Harmony harmony, MethodBase target, RefAction<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(this Harmony harmony, MethodBase target, Ref2Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(this Harmony harmony, MethodBase target, Ref3Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(this Harmony harmony, MethodBase target, Ref4Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(this Harmony harmony, MethodBase target, Ref5Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(this Harmony harmony, MethodBase target, Ref6Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(this Harmony harmony, MethodBase target, Ref7Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(this Harmony harmony, MethodBase target, Ref8Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(this Harmony harmony, MethodBase target, Ref9Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(this Harmony harmony, MethodBase target, Ref10Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(this Harmony harmony, MethodBase target, Ref11Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(this Harmony harmony, MethodBase target, RefAction<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(this Harmony harmony, MethodBase target, Ref2Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(this Harmony harmony, MethodBase target, Ref3Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(this Harmony harmony, MethodBase target, Ref4Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(this Harmony harmony, MethodBase target, Ref5Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(this Harmony harmony, MethodBase target, Ref6Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(this Harmony harmony, MethodBase target, Ref7Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(this Harmony harmony, MethodBase target, Ref8Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(this Harmony harmony, MethodBase target, Ref9Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(this Harmony harmony, MethodBase target, Ref10Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(this Harmony harmony, MethodBase target, Ref11Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(this Harmony harmony, MethodBase target, Ref12Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(this Harmony harmony, MethodBase target, RefAction<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(this Harmony harmony, MethodBase target, Ref2Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(this Harmony harmony, MethodBase target, Ref3Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(this Harmony harmony, MethodBase target, Ref4Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(this Harmony harmony, MethodBase target, Ref5Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(this Harmony harmony, MethodBase target, Ref6Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(this Harmony harmony, MethodBase target, Ref7Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(this Harmony harmony, MethodBase target, Ref8Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(this Harmony harmony, MethodBase target, Ref9Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(this Harmony harmony, MethodBase target, Ref10Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(this Harmony harmony, MethodBase target, Ref11Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(this Harmony harmony, MethodBase target, Ref12Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(this Harmony harmony, MethodBase target, Ref13Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(this Harmony harmony, MethodBase target, RefAction<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(this Harmony harmony, MethodBase target, Ref2Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(this Harmony harmony, MethodBase target, Ref3Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(this Harmony harmony, MethodBase target, Ref4Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(this Harmony harmony, MethodBase target, Ref5Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(this Harmony harmony, MethodBase target, Ref6Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(this Harmony harmony, MethodBase target, Ref7Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(this Harmony harmony, MethodBase target, Ref8Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(this Harmony harmony, MethodBase target, Ref9Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(this Harmony harmony, MethodBase target, Ref10Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(this Harmony harmony, MethodBase target, Ref11Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(this Harmony harmony, MethodBase target, Ref12Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(this Harmony harmony, MethodBase target, Ref13Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(this Harmony harmony, MethodBase target, Ref14Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(this Harmony harmony, MethodBase target, RefAction<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(this Harmony harmony, MethodBase target, Ref2Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(this Harmony harmony, MethodBase target, Ref3Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(this Harmony harmony, MethodBase target, Ref4Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(this Harmony harmony, MethodBase target, Ref5Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(this Harmony harmony, MethodBase target, Ref6Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(this Harmony harmony, MethodBase target, Ref7Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(this Harmony harmony, MethodBase target, Ref8Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(this Harmony harmony, MethodBase target, Ref9Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(this Harmony harmony, MethodBase target, Ref10Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(this Harmony harmony, MethodBase target, Ref11Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(this Harmony harmony, MethodBase target, Ref12Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(this Harmony harmony, MethodBase target, Ref13Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(this Harmony harmony, MethodBase target, Ref14Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(this Harmony harmony, MethodBase target, Ref15Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(this Harmony harmony, MethodBase target, RefAction<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(this Harmony harmony, MethodBase target, Ref2Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(this Harmony harmony, MethodBase target, Ref3Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(this Harmony harmony, MethodBase target, Ref4Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(this Harmony harmony, MethodBase target, Ref5Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(this Harmony harmony, MethodBase target, Ref6Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(this Harmony harmony, MethodBase target, Ref7Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(this Harmony harmony, MethodBase target, Ref8Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(this Harmony harmony, MethodBase target, Ref9Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(this Harmony harmony, MethodBase target, Ref10Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(this Harmony harmony, MethodBase target, Ref11Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(this Harmony harmony, MethodBase target, Ref12Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(this Harmony harmony, MethodBase target, Ref13Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(this Harmony harmony, MethodBase target, Ref14Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(this Harmony harmony, MethodBase target, Ref15Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(this Harmony harmony, MethodBase target, Ref16Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(this Harmony harmony, MethodBase target, RefAction<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(this Harmony harmony, MethodBase target, Ref2Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(this Harmony harmony, MethodBase target, Ref3Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(this Harmony harmony, MethodBase target, Ref4Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(this Harmony harmony, MethodBase target, Ref5Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(this Harmony harmony, MethodBase target, Ref6Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(this Harmony harmony, MethodBase target, Ref7Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(this Harmony harmony, MethodBase target, Ref8Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(this Harmony harmony, MethodBase target, Ref9Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(this Harmony harmony, MethodBase target, Ref10Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(this Harmony harmony, MethodBase target, Ref11Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(this Harmony harmony, MethodBase target, Ref12Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(this Harmony harmony, MethodBase target, Ref13Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(this Harmony harmony, MethodBase target, Ref14Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(this Harmony harmony, MethodBase target, Ref15Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(this Harmony harmony, MethodBase target, Ref16Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(this Harmony harmony, MethodBase target, Ref17Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(this Harmony harmony, MethodBase target, RefAction<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(this Harmony harmony, MethodBase target, Ref2Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(this Harmony harmony, MethodBase target, Ref3Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(this Harmony harmony, MethodBase target, Ref4Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(this Harmony harmony, MethodBase target, Ref5Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(this Harmony harmony, MethodBase target, Ref6Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(this Harmony harmony, MethodBase target, Ref7Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(this Harmony harmony, MethodBase target, Ref8Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(this Harmony harmony, MethodBase target, Ref9Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(this Harmony harmony, MethodBase target, Ref10Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(this Harmony harmony, MethodBase target, Ref11Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(this Harmony harmony, MethodBase target, Ref12Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(this Harmony harmony, MethodBase target, Ref13Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(this Harmony harmony, MethodBase target, Ref14Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(this Harmony harmony, MethodBase target, Ref15Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(this Harmony harmony, MethodBase target, Ref16Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(this Harmony harmony, MethodBase target, Ref17Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(this Harmony harmony, MethodBase target, Ref18Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(this Harmony harmony, MethodBase target, RefAction<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(this Harmony harmony, MethodBase target, Ref2Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(this Harmony harmony, MethodBase target, Ref3Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(this Harmony harmony, MethodBase target, Ref4Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(this Harmony harmony, MethodBase target, Ref5Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(this Harmony harmony, MethodBase target, Ref6Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(this Harmony harmony, MethodBase target, Ref7Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(this Harmony harmony, MethodBase target, Ref8Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(this Harmony harmony, MethodBase target, Ref9Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(this Harmony harmony, MethodBase target, Ref10Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(this Harmony harmony, MethodBase target, Ref11Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(this Harmony harmony, MethodBase target, Ref12Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(this Harmony harmony, MethodBase target, Ref13Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(this Harmony harmony, MethodBase target, Ref14Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(this Harmony harmony, MethodBase target, Ref15Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(this Harmony harmony, MethodBase target, Ref16Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(this Harmony harmony, MethodBase target, Ref17Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(this Harmony harmony, MethodBase target, Ref18Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(this Harmony harmony, MethodBase target, Ref19Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(this Harmony harmony, MethodBase target, RefAction<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(this Harmony harmony, MethodBase target, Ref2Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(this Harmony harmony, MethodBase target, Ref3Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(this Harmony harmony, MethodBase target, Ref4Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(this Harmony harmony, MethodBase target, Ref5Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(this Harmony harmony, MethodBase target, Ref6Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(this Harmony harmony, MethodBase target, Ref7Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(this Harmony harmony, MethodBase target, Ref8Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(this Harmony harmony, MethodBase target, Ref9Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(this Harmony harmony, MethodBase target, Ref10Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(this Harmony harmony, MethodBase target, Ref11Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(this Harmony harmony, MethodBase target, Ref12Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(this Harmony harmony, MethodBase target, Ref13Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(this Harmony harmony, MethodBase target, Ref14Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(this Harmony harmony, MethodBase target, Ref15Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(this Harmony harmony, MethodBase target, Ref16Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(this Harmony harmony, MethodBase target, Ref17Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(this Harmony harmony, MethodBase target, Ref18Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(this Harmony harmony, MethodBase target, Ref19Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(this Harmony harmony, MethodBase target, Ref20Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(this Harmony harmony, MethodBase target, RefAction<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(this Harmony harmony, MethodBase target, Ref2Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(this Harmony harmony, MethodBase target, Ref3Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(this Harmony harmony, MethodBase target, Ref4Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(this Harmony harmony, MethodBase target, Ref5Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(this Harmony harmony, MethodBase target, Ref6Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(this Harmony harmony, MethodBase target, Ref7Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(this Harmony harmony, MethodBase target, Ref8Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(this Harmony harmony, MethodBase target, Ref9Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(this Harmony harmony, MethodBase target, Ref10Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(this Harmony harmony, MethodBase target, Ref11Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(this Harmony harmony, MethodBase target, Ref12Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(this Harmony harmony, MethodBase target, Ref13Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(this Harmony harmony, MethodBase target, Ref14Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(this Harmony harmony, MethodBase target, Ref15Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(this Harmony harmony, MethodBase target, Ref16Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(this Harmony harmony, MethodBase target, Ref17Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(this Harmony harmony, MethodBase target, Ref18Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(this Harmony harmony, MethodBase target, Ref19Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(this Harmony harmony, MethodBase target, Ref20Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(this Harmony harmony, MethodBase target, Ref21Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(this Harmony harmony, MethodBase target, RefAction<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(this Harmony harmony, MethodBase target, Ref2Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(this Harmony harmony, MethodBase target, Ref3Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(this Harmony harmony, MethodBase target, Ref4Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(this Harmony harmony, MethodBase target, Ref5Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(this Harmony harmony, MethodBase target, Ref6Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(this Harmony harmony, MethodBase target, Ref7Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(this Harmony harmony, MethodBase target, Ref8Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(this Harmony harmony, MethodBase target, Ref9Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(this Harmony harmony, MethodBase target, Ref10Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(this Harmony harmony, MethodBase target, Ref11Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(this Harmony harmony, MethodBase target, Ref12Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(this Harmony harmony, MethodBase target, Ref13Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(this Harmony harmony, MethodBase target, Ref14Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(this Harmony harmony, MethodBase target, Ref15Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(this Harmony harmony, MethodBase target, Ref16Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(this Harmony harmony, MethodBase target, Ref17Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(this Harmony harmony, MethodBase target, Ref18Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(this Harmony harmony, MethodBase target, Ref19Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(this Harmony harmony, MethodBase target, Ref20Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(this Harmony harmony, MethodBase target, Ref21Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(this Harmony harmony, MethodBase target, Ref22Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(this Harmony harmony, MethodBase target, RefAction<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(this Harmony harmony, MethodBase target, Ref2Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(this Harmony harmony, MethodBase target, Ref3Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(this Harmony harmony, MethodBase target, Ref4Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(this Harmony harmony, MethodBase target, Ref5Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(this Harmony harmony, MethodBase target, Ref6Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(this Harmony harmony, MethodBase target, Ref7Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(this Harmony harmony, MethodBase target, Ref8Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(this Harmony harmony, MethodBase target, Ref9Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(this Harmony harmony, MethodBase target, Ref10Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(this Harmony harmony, MethodBase target, Ref11Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(this Harmony harmony, MethodBase target, Ref12Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(this Harmony harmony, MethodBase target, Ref13Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(this Harmony harmony, MethodBase target, Ref14Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(this Harmony harmony, MethodBase target, Ref15Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(this Harmony harmony, MethodBase target, Ref16Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(this Harmony harmony, MethodBase target, Ref17Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(this Harmony harmony, MethodBase target, Ref18Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(this Harmony harmony, MethodBase target, Ref19Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(this Harmony harmony, MethodBase target, Ref20Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(this Harmony harmony, MethodBase target, Ref21Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(this Harmony harmony, MethodBase target, Ref22Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(this Harmony harmony, MethodBase target, Ref23Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(this Harmony harmony, MethodBase target, RefAction<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(this Harmony harmony, MethodBase target, Ref2Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(this Harmony harmony, MethodBase target, Ref3Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(this Harmony harmony, MethodBase target, Ref4Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(this Harmony harmony, MethodBase target, Ref5Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(this Harmony harmony, MethodBase target, Ref6Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(this Harmony harmony, MethodBase target, Ref7Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(this Harmony harmony, MethodBase target, Ref8Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(this Harmony harmony, MethodBase target, Ref9Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(this Harmony harmony, MethodBase target, Ref10Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(this Harmony harmony, MethodBase target, Ref11Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(this Harmony harmony, MethodBase target, Ref12Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(this Harmony harmony, MethodBase target, Ref13Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(this Harmony harmony, MethodBase target, Ref14Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(this Harmony harmony, MethodBase target, Ref15Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(this Harmony harmony, MethodBase target, Ref16Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(this Harmony harmony, MethodBase target, Ref17Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(this Harmony harmony, MethodBase target, Ref18Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(this Harmony harmony, MethodBase target, Ref19Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(this Harmony harmony, MethodBase target, Ref20Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(this Harmony harmony, MethodBase target, Ref21Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(this Harmony harmony, MethodBase target, Ref22Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(this Harmony harmony, MethodBase target, Ref23Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(this Harmony harmony, MethodBase target, Ref24Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(this Harmony harmony, MethodBase target, RefAction<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(this Harmony harmony, MethodBase target, Ref2Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(this Harmony harmony, MethodBase target, Ref3Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(this Harmony harmony, MethodBase target, Ref4Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(this Harmony harmony, MethodBase target, Ref5Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(this Harmony harmony, MethodBase target, Ref6Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(this Harmony harmony, MethodBase target, Ref7Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(this Harmony harmony, MethodBase target, Ref8Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(this Harmony harmony, MethodBase target, Ref9Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(this Harmony harmony, MethodBase target, Ref10Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(this Harmony harmony, MethodBase target, Ref11Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(this Harmony harmony, MethodBase target, Ref12Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(this Harmony harmony, MethodBase target, Ref13Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(this Harmony harmony, MethodBase target, Ref14Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(this Harmony harmony, MethodBase target, Ref15Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(this Harmony harmony, MethodBase target, Ref16Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(this Harmony harmony, MethodBase target, Ref17Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(this Harmony harmony, MethodBase target, Ref18Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(this Harmony harmony, MethodBase target, Ref19Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(this Harmony harmony, MethodBase target, Ref20Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(this Harmony harmony, MethodBase target, Ref21Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(this Harmony harmony, MethodBase target, Ref22Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(this Harmony harmony, MethodBase target, Ref23Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(this Harmony harmony, MethodBase target, Ref24Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(this Harmony harmony, MethodBase target, Ref25Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(this Harmony harmony, MethodBase target, RefAction<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(this Harmony harmony, MethodBase target, Ref2Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(this Harmony harmony, MethodBase target, Ref3Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(this Harmony harmony, MethodBase target, Ref4Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(this Harmony harmony, MethodBase target, Ref5Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(this Harmony harmony, MethodBase target, Ref6Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(this Harmony harmony, MethodBase target, Ref7Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(this Harmony harmony, MethodBase target, Ref8Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(this Harmony harmony, MethodBase target, Ref9Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(this Harmony harmony, MethodBase target, Ref10Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(this Harmony harmony, MethodBase target, Ref11Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(this Harmony harmony, MethodBase target, Ref12Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(this Harmony harmony, MethodBase target, Ref13Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(this Harmony harmony, MethodBase target, Ref14Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(this Harmony harmony, MethodBase target, Ref15Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(this Harmony harmony, MethodBase target, Ref16Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(this Harmony harmony, MethodBase target, Ref17Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(this Harmony harmony, MethodBase target, Ref18Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(this Harmony harmony, MethodBase target, Ref19Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(this Harmony harmony, MethodBase target, Ref20Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(this Harmony harmony, MethodBase target, Ref21Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(this Harmony harmony, MethodBase target, Ref22Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(this Harmony harmony, MethodBase target, Ref23Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(this Harmony harmony, MethodBase target, Ref24Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(this Harmony harmony, MethodBase target, Ref25Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(this Harmony harmony, MethodBase target, Ref26Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, RefAction<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, Ref2Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, Ref3Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, Ref4Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, Ref5Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, Ref6Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, Ref7Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, Ref8Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, Ref9Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, Ref10Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, Ref11Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, Ref12Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, Ref13Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, Ref14Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, Ref15Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, Ref16Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, Ref17Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, Ref18Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, Ref19Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, Ref20Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, Ref21Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, Ref22Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, Ref23Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, Ref24Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, Ref25Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, Ref26Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(this Harmony harmony, MethodBase target, Ref27Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, RefAction<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Ref2Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Ref3Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Ref4Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Ref5Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Ref6Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Ref7Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Ref8Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Ref9Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Ref10Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Ref11Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Ref12Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Ref13Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Ref14Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Ref15Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Ref16Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Ref17Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Ref18Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Ref19Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Ref20Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Ref21Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Ref22Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Ref23Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Ref24Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Ref25Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Ref26Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Ref27Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(this Harmony harmony, MethodBase target, Ref28Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, RefAction<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref2Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref3Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref4Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref5Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref6Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref7Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref8Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref9Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref10Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref11Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref12Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref13Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref14Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref15Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref16Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref17Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref18Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref19Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref20Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref21Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref22Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref23Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref24Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref25Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref26Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref27Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref28Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(this Harmony harmony, MethodBase target, Ref29Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, RefAction<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref2Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref3Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref4Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref5Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref6Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref7Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref8Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref9Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref10Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref11Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref12Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref13Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref14Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref15Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref16Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref17Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref18Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref19Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref20Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref21Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref22Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref23Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref24Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref25Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref26Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref27Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref28Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref29Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(this Harmony harmony, MethodBase target, Ref30Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, RefAction<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref2Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref3Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref4Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref5Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref6Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref7Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref8Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref9Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref10Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref11Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref12Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref13Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref14Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref15Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref16Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref17Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref18Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref19Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref20Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref21Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref22Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref23Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref24Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref25Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref26Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref27Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref28Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref29Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref30Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(this Harmony harmony, MethodBase target, Ref31Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, RefAction<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref2Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref3Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref4Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref5Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref6Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref7Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref8Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref9Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref10Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref11Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref12Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref13Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref14Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref15Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref16Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref17Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref18Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref19Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref20Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref21Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref22Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref23Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref24Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref25Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref26Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref27Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref28Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref29Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref30Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref31Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        public static MethodInfo Postfix<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(this Harmony harmony, MethodBase target, Ref32Action<T, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32> patch) => harmony.Patch(target, null, new HarmonyMethod(Wrap(patch)));
        #endregion
    }
}